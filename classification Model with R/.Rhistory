# Importing libraries
library(datasets)
library(caret) # caret stands Classification and Regression Training. It is a powerful and widely used package for machine learning and statistical modeling
# iris dataset
data("iris")
View(iris)
# Importing libraries
library(datasets)
library(caret) # caret stands Classification and Regression Training. It is a powerful and widely used package for machine learning and statistical modeling
# iris dataset
data("iris")
View(iris)
# Importing libraries
library(datasets)
library(caret) # caret stands Classification and Regression Training. It is a powerful and widely used package for machine learning and statistical modeling
# iris dataset
data("iris")
View(iris)
# Method 2: installing
library(RCurl)
iris <-read.csv(text=getURL("https://raw.githubusercontent.com/dataprofessor/data/master/iris.csv"))
View(iris)
# Method 2: installing
library(RCurl)
iris <-read.csv(text=getURL("https://raw.githubusercontent.com/dataprofessor/data/master/iris.csv"))
View(iris)
# Method 2: installing
library(RCurl)
iris <-read.csv(text=getURL("https://raw.githubusercontent.com/dataprofessor/data/master/iris.csv"))
library(RCurl)
iris <-read.csv(text=getURL("https://raw.githubusercontent.com/dataprofessor/data/master/iris.csv"))
install.packages(RCurl)
install.packages("RCurl")
library(RCurl)
iris <-read.csv(text=getURL("https://raw.githubusercontent.com/dataprofessor/data/master/iris.csv"))
View(iris)
# Method 2: installing
library(RCurl)
iris <-read.csv(text=getURL("https://raw.githubusercontent.com/dataprofessor/data/master/iris.csv"))
# Method 2: installing
library(RCurl)
iris <-read.csv(text=getURL("https://github.com/ChouayaSaif/R-projects/blob/26f2567c48d0c99ad39e1c1664347b501a824511/classification%20Model%20with%20R/iris.csv"))
View(iris)
iris <-read.csv(text=getURL("https://github.com/ChouayaSaif/R-projects/blob/26f2567c48d0c99ad39e1c1664347b501a824511/classification%20Model%20with%20R/iris.csv"))
library(RCurl)
iris <-read.csv(text=getURL("https://raw.githubusercontent.com/dataprofessor/data/master/iris.csv"))
clear
clos
library(RCurl)
iris <-read.csv(text=getURL("https://raw.githubusercontent.com/dataprofessor/data/master/iris.csv"))
install.packages("RCurl")
# Method 2: installing
library(RCurl)
iris <-read.csv(text=getURL("https://raw.githubusercontent.com/dataprofessor/data/master/iris.csv"))
iris$Sepal.Width
# Phase 2:display statistics
iris$Sepal.Length
species <- iris$Species
species <- iris$Species
species
############################
head(iris)
tail(iris)
head(iris,4)
tail(iris,5)
summary(iris)
summary(iris$Sepal.Length)
is.na(iris)
sum(is.na(iris))
install.packages("skimr")
# install.packages("skimr")
skim(iris)
# skimr() : explands no summary()
# install.packages("skimr")
library(skimr)
skim(iris)
# skimr() : explands no summary()
# install.packages("skimr")
library(skimr)
skim(iris)
# Group data by species and then perform skimr
iris %>%
dplyr::group_by(Species) %>%
skim()
# Group data by species and then perform skimr
iris %>%
dplyr::group_by(Species) %>%
skim()
install.packages("knitr")
install.packages("skimr")
library(skimr)
install.packages("knitr")
library(skimr)
install.packages("knitr", dependencies = TRUE)
# skimr() : explands no summary()
install.packages("skimr")
library(skimr)
skim(iris)
install.packages("xfun", dependencies = TRUE)
# Importing libraries
library(datasets)
# Method 1: using datasets library has iris already in
install.packages("caret")
install.packages("ggplot2")
library(caret) # caret stands Classification and Regression Training. It is a powerful and widely used package for machine learning and statistical modeling
# iris dataset
data("iris")
iris <- datasets::iris #access a specific object from a package without loading the entire package.
# Method 2: installing
library(RCurl)
iris <-read.csv(text=getURL("https://github.com/ChouayaSaif/R-projects/blob/26f2567c48d0c99ad39e1c1664347b501a824511/classification%20Model%20with%20R/iris.csv"))
View(iris)
# skimr() : explands no summary()
install.packages("skimr")
library(skimr)
skim(iris)
# Group data by species and then perform skimr
iris %>%    #  pipe operator (%>%), allows you to chain commands together
dplyr::group_by(Species) %>%   # The group_by() function from dplyr creates a grouped data frame.
skim()
# in this case: boxplot
featurePlot(x = iris[,1:4], # predictors
y = iris$Species, # dependent (response) variable
plot = "box",
strip = strip.custom(par.strip.text=list(cex=.7)),
scales = list(x=list(relation="free"),
y=list(relation="free")))
library(ISLR)
library(ggplot2)
library(caret)
data(Wage)
training <- Wage
filename <- sprintf("images/wage%%03d.png")
obj <- featurePlot(x=training[,c("age","education","jobclass")],
y = training$wage,
plot="pairs")
png(filename)
print(obj)
dev.off()
library(ISLR)
library(ggplot2)
library(caret)
data(Wage)
training <- Wage
filename <- sprintf("images/wage%%03d.png")
obj <- featurePlot(x=training[,c("age","education","jobclass")],
y = training$wage,
plot="pairs")
install.packages("caret")
install.packages("ggplot2")
# iris dataset
data("iris")
iris <- datasets::iris #access a specific object from a package without loading the entire package.
install.packages("skimr")
library(skimr)
skim(iris)
